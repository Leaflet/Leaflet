name: CI
on: [push, pull_request]
permissions:
  contents: read
env:
  NODE_VERSION: 18
jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-latest]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: ${{ startsWith(github.ref, 'refs/tags/v') && 'release' || '' }}

      - name: Cache setup
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

  build-docs:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: ./docs

      - name: Run jekyll build
        working-directory: ./docs
        run: bundle exec jekyll build --strict_front_matter

  lint:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - name: Restore setup
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run lint task
        run: npm run lint

  bundlemon:
    needs: setup
    if: github.repository_owner == 'Leaflet'
    runs-on: ubuntu-20.04
    steps:
      - name: Restore setup
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: release

      - name: Run bundlemon task
        run: npm run bundlemon
        env:
          CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

  test:
    needs: setup
    runs-on: ${{ matrix.os || 'ubuntu-20.04' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - browser: Chrome1280x1024
          - browser: FirefoxTouch
          - browser: FirefoxNoTouch
          - browser: FirefoxRetina
          - browser: Chrome1280x1024
            os: windows-2019
          - browser: Chrome1280x1024
            os: macos-latest
          - browser: SafariNative
            os: macos-latest
    steps:
      - name: Restore setup
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run tests on ${{ matrix.browser }}
        run: npm test -- --browsers ${{ matrix.browser }}

  publish-artifacts:
    needs: setup
    if: github.repository_owner == 'Leaflet' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-20.04
    steps:
      - name: Restore setup
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Compress artifacts
        working-directory: dist
        run: zip -r leaflet.zip .

      - name: Publish artifacts
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --delete --exact-timestamps
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: dist
          DEST_DIR: content/leaflet/${{ github.ref_name }}

  publish-npm:
    needs: setup
    if: github.repository_owner == 'Leaflet' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - name: Restore setup
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Publish to NPM
        run: |
          TAG=$(echo $GITHUB_REF_NAME | grep -oP '^v\d+\.\d+\.\d+-?\K(\w+)?')
          npm publish --tag ${TAG:-latest}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
